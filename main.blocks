<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="N~kf1#9cH-M`Y)-yHxrG">PALLETSIDE</variable><variable id="Z]TS~HE^mcfRK=~A~nuT">ROUTEBUSY</variable><variable id="d$:`rk][;U_KG!%HC}w!">PALLETBOX</variable><variable id="L7fXrI#b`xa3Vga[FL~-">StartNextJob</variable><variable id="sk,ka[g?^dG}XaZ.VaS{">BOX</variable><variable id="r(4pqc##m/debXmBzg3n">SIDE</variable></variables><block type="pxt-on-start" id="W[g6$:qWEw+vBMe(xP_=" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id=";}8;Q?rt}#pisdMD%O+v"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let PALLETBOX = 0" numlines="1" declaredvars="PALLETBOX"></mutation><next><block type="typescript_statement" id="hlcg1%QT_]{L~gKT2Jj5"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum Box {&#13;" line1="    //% block=&quot;green&quot;&#13;" line2="    //% block.loc.nl=&quot;groen&quot;&#13;" line3="    Green = 1,&#13;" line4="    //% block=&quot;blue&quot;&#13;" line5="    //% block.loc.nl=&quot;blauw&quot;&#13;" line6="    Blue = 2,&#13;" line7="    //% block=&quot;yellow&quot;&#13;" line8="    //% block.loc.nl=&quot;geel&quot;&#13;" line9="    Yellow = 3&#13;" line10="}" numlines="11"></mutation><next><block type="typescript_statement" id="3P{OY0P^k06m/MKiu}}p"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum Side {&#13;" line1="    //% block=&quot;A&quot;&#13;" line2="    A = 1,&#13;" line3="    //% block=&quot;B&quot;&#13;" line4="    B = 2&#13;" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="{+xYwF5{h+97+e{2X/vp"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="CForklift.init()" numlines="1"></mutation><next><block type="typescript_statement" id="1f-k}DK``aL]Ew(B6Ii5"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let BOX: Box" numlines="1" declaredvars="BOX"></mutation><next><block type="typescript_statement" id="V6jJWd.[v*q4M-`]bP}."><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let SIDE: Side" numlines="1" declaredvars="SIDE"></mutation><next><block type="typescript_statement" id="naeG3k/?Lh[no;KVUl8W"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteGreenBringA: handler" numlines="1" declaredvars="RouteGreenBringA"></mutation><next><block type="typescript_statement" id="!{)ighfNw@m{aSb^R@dv"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteGreenReturnA: handler" numlines="1" declaredvars="RouteGreenReturnA"></mutation><next><block type="typescript_statement" id="ginFX48},zKuke(+}nf`"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteBlueBringA: handler" numlines="1" declaredvars="RouteBlueBringA"></mutation><next><block type="typescript_statement" id="%kdpg^n7%%R[r{H.|Xq+"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteBlueReturnA: handler" numlines="1" declaredvars="RouteBlueReturnA"></mutation><next><block type="typescript_statement" id="tP~pw!fvtaw7yBuY$OhA"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteYellowBringA: handler" numlines="1" declaredvars="RouteYellowBringA"></mutation><next><block type="typescript_statement" id="X,CM5YndKm{#T[q2vDQd"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteYellowReturnA: handler" numlines="1" declaredvars="RouteYellowReturnA"></mutation><next><block type="typescript_statement" id="gRP]My%=zbQ.FLDay;k}"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteGreenBringB: handler" numlines="1" declaredvars="RouteGreenBringB"></mutation><next><block type="typescript_statement" id="TpF}^ev$BopmvcOPHd7_"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteGreenReturnB: handler" numlines="1" declaredvars="RouteGreenReturnB"></mutation><next><block type="typescript_statement" id="{,o@u84$~/},,1Y!=gOe"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteBlueBringB: handler" numlines="1" declaredvars="RouteBlueBringB"></mutation><next><block type="typescript_statement" id="(F[5CxIkuf#6#5.[{7px"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteBlueReturnB: handler" numlines="1" declaredvars="RouteBlueReturnB"></mutation><next><block type="typescript_statement" id="3`ibTHv%qOd$WLd`8)k3"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteYellowBringB: handler" numlines="1" declaredvars="RouteYellowBringB"></mutation><next><block type="typescript_statement" id=".XLu5R)W@LFgB^_8;rx@"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteYellowReturnB: handler" numlines="1" declaredvars="RouteYellowReturnB"></mutation><next><block type="typescript_statement" id="dx?Tsq!3.8PelEy)A7{u"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteHomeToStart: handler" numlines="1" declaredvars="RouteHomeToStart"></mutation><next><block type="typescript_statement" id="49_{[_y5DZ!ca~La=ODk"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let RouteStartToHome: handler" numlines="1" declaredvars="RouteStartToHome"></mutation><next><block type="typescript_statement" id="U)K9!:#~%mb-.ZqJQ6|v"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let StartNextJob: handler" numlines="1" declaredvars="StartNextJob"></mutation><next><block type="typescript_statement" id="aq,47(T-j9%UT!Qn|7o1"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace CForklift {&#13;" line1="&#13;" line2="    export enum Lift {&#13;" line3="        //% block=&quot;up&quot;&#13;" line4="        //% block.loc.nl=&quot;omhoog&quot;&#13;" line5="        Up,&#13;" line6="        //% block=&quot;down&quot;&#13;" line7="        //% block.loc.nl=&quot;omlaag&quot;&#13;" line8="        Down&#13;" line9="    }&#13;" line10="&#13;" line11="    export function init() {&#13;" line12="        ColorSensor.init()&#13;" line13="        CMecanum.init()&#13;" line14="&#13;" line15="        Nezha.setServoType(Servo.S1, ServoType.ST360)&#13;" line16="        Nezha.setServoType(Servo.S2, ServoType.ST360)&#13;" line17="&#13;" line18="        basic.showLeds(`&#13;" line19="            . . . . .&#13;" line20="            . . . . .&#13;" line21="            . . # . .&#13;" line22="            . . . . .&#13;" line23="            . . . . .&#13;" line24="            `)&#13;" line25="        basic.pause(500)&#13;" line26="        basic.showIcon(IconNames.SmallSquare)&#13;" line27="        basic.pause(500)&#13;" line28="        basic.showIcon(IconNames.Square)&#13;" line29="        basic.pause(500)&#13;" line30="        basic.clearScreen()&#13;" line31="&#13;" line32="        CForklift.liftUp()&#13;" line33="        basic.pause(500)&#13;" line34="        CForklift.liftDown()&#13;" line35="&#13;" line36="        basic.showIcon(IconNames.Yes)&#13;" line37="    }&#13;" line38="&#13;" line39="    //% block=&quot;stop&quot;&#13;" line40="    //% block.loc.nl=&quot;stop&quot;&#13;" line41="    export function stop() {&#13;" line42="        Nezha.setFourWheelSpeed(0, 0, 0, 0)&#13;" line43="    }&#13;" line44="&#13;" line45="    //% block=&quot;stop in the %box box&quot;&#13;" line46="    //% block.loc.nl=&quot;stop in vak %box&quot;&#13;" line47="    export function waitBox(box: Box) {&#13;" line48="        let col: Color&#13;" line49="        switch (box) {&#13;" line50="            case Box.Green: col = Color.Green; break;&#13;" line51="            case Box.Blue: col = Color.Blue; break;&#13;" line52="            case Box.Yellow: col = Color.Yellow; break;&#13;" line53="        }&#13;" line54="        while (ColorSensor.read() != col) { basic.pause(1) }&#13;" line55="        stop()&#13;" line56="    }&#13;" line57="&#13;" line58="    //% block=&quot;stop at a crossing&quot;&#13;" line59="    //% block.loc.nl=&quot;stop op een kruispunt&quot;&#13;" line60="    export function waitCrossing() {&#13;" line61="        while (ColorSensor.read() != Color.Orange) { basic.pause(1) }&#13;" line62="        stop()&#13;" line63="    }&#13;" line64="&#13;" line65="    //% block=&quot;move %dir&quot;&#13;" line66="    //% block.loc.nl=&quot;rijd naar %dir&quot;&#13;" line67="    export function move(dir: Move) {&#13;" line68="        CMecanum.move(dir)&#13;" line69="    }&#13;" line70="&#13;" line71="    //% block=&quot;make a %turn&quot;&#13;" line72="    //% block.loc.nl=&quot;maak een %turn&quot;&#13;" line73="    export function turn(dir: Turn) {&#13;" line74="        CMecanum.turn(dir)&#13;" line75="    }&#13;" line76="&#13;" line77="    //% color=&quot;#FFCC00&quot;&#13;" line78="    //% block=&quot;when a new pallet is taken in&quot;&#13;" line79="    //% block.loc.nl=&quot;wanneer een nieuwe pallet binnenkomt&quot;&#13;" line80="    export function onStartNextJob(programmableCode: () =&gt; void): void {&#13;" line81="        StartNextJob = programmableCode;&#13;" line82="    }&#13;" line83="&#13;" line84="    //% subcategory=&quot;Bestemming&quot;&#13;" line85="    //% block=&quot;delivery side&quot;&#13;" line86="    //% block.loc.nl=&quot;aflever-zijde&quot;&#13;" line87="    export function palletSide(): Side {&#13;" line88="        return SIDE&#13;" line89="    }&#13;" line90="&#13;" line91="    //% subcategory=&quot;Bestemming&quot;&#13;" line92="    //% block=&quot;delivery box&quot;&#13;" line93="    //% block.loc.nl=&quot;aflever-vak&quot;&#13;" line94="    export function palletBox(): Box {&#13;" line95="        return BOX&#13;" line96="    }&#13;" line97="&#13;" line98="    //% subcategory=&quot;Bestemming&quot;&#13;" line99="    //% block=&quot;side %side&quot;&#13;" line100="    //% block.loc.nl=&quot;zijde %side&quot;&#13;" line101="    export function asSide(side: Side): Side {&#13;" line102="        return side&#13;" line103="    }&#13;" line104="&#13;" line105="    //% subcategory=&quot;Bestemming&quot;&#13;" line106="    //% block=&quot;box %box&quot;&#13;" line107="    //% block.loc.nl=&quot;vak %box&quot;&#13;" line108="    export function asColor(box: Box): Box {&#13;" line109="        return box&#13;" line110="    }&#13;" line111="&#13;" line112="    //% subcategory=&quot;Bestemming&quot;&#13;" line113="    //% block=&quot;follow the route returning from box %box side %side&quot;&#13;" line114="    //% block.loc.nl=&quot;volg de route terug van vak %box zijde %side&quot;&#13;" line115="    export function returnFrom(box: number, side: number) {&#13;" line116="        switch (box) {&#13;" line117="            case Box.Green:&#13;" line118="                if ((side == Side.A) &amp;&amp; RouteGreenReturnA) RouteGreenReturnA()&#13;" line119="                if ((side == Side.B) &amp;&amp; RouteGreenReturnB) RouteGreenReturnB()&#13;" line120="                break;&#13;" line121="            case Box.Blue:&#13;" line122="                if ((side == Side.A) &amp;&amp; RouteBlueReturnA) RouteBlueReturnA()&#13;" line123="                if ((side == Side.B) &amp;&amp; RouteBlueReturnB) RouteBlueReturnB()&#13;" line124="                break;&#13;" line125="            case Box.Yellow:&#13;" line126="                if ((side == Side.A) &amp;&amp; RouteYellowReturnA) RouteYellowReturnA()&#13;" line127="                if ((side == Side.B) &amp;&amp; RouteYellowReturnB) RouteYellowReturnB()&#13;" line128="                break;&#13;" line129="        }&#13;" line130="    }&#13;" line131="&#13;" line132="    //% subcategory=&quot;Bestemming&quot;&#13;" line133="    //% block=&quot;follow the route to box %box side %side&quot;&#13;" line134="    //% block.loc.nl=&quot;volg de route naar vak %box zijde %side&quot;&#13;" line135="    export function bringTo(box: number, side: number) {&#13;" line136="        switch (box) {&#13;" line137="            case Box.Green:&#13;" line138="                if ((side == Side.A) &amp;&amp; RouteGreenBringA) RouteGreenBringA()&#13;" line139="                if ((side == Side.B) &amp;&amp; RouteGreenBringB) RouteGreenBringB()&#13;" line140="                break;&#13;" line141="            case Box.Blue:&#13;" line142="                if ((side == Side.A) &amp;&amp; RouteBlueBringA) RouteBlueBringA()&#13;" line143="                if ((side == Side.B) &amp;&amp; RouteBlueBringB) RouteBlueBringB()&#13;" line144="                break;&#13;" line145="            case Box.Yellow:&#13;" line146="                if ((side == Side.A) &amp;&amp; RouteYellowBringA) RouteYellowBringA()&#13;" line147="                if ((side == Side.B) &amp;&amp; RouteYellowBringB) RouteYellowBringB()&#13;" line148="                break;&#13;" line149="        }&#13;" line150="    }&#13;" line151="&#13;" line152="&#13;" line153="    //% subcategory=&quot;Bestemming&quot;&#13;" line154="    //% block=&quot;follow the route from start to home&quot;&#13;" line155="    //% block.loc.nl=&quot;volg de route van start naar de thuisbasis&quot;&#13;" line156="    export function startToHome() {&#13;" line157="        if (RouteStartToHome) RouteStartToHome()&#13;" line158="    }&#13;" line159="&#13;" line160="    //% subcategory=&quot;Bestemming&quot;&#13;" line161="    //% block=&quot;follow the route from home to start&quot;&#13;" line162="    //% block.loc.nl=&quot;volg de route van de thuisbasis naar start&quot;&#13;" line163="    export function homeToStart() {&#13;" line164="        if (RouteHomeToStart) RouteHomeToStart()&#13;" line165="    }&#13;" line166="&#13;" line167="    //% subcategory=&quot;Liftbediening&quot;&#13;" line168="    //% block=&quot;has load&quot;&#13;" line169="    //% block.loc.nl=&quot;heeft lading&quot;&#13;" line170="    export function isLoaded(): boolean {&#13;" line171="        SwitchSensor.setPort(RJPort.J1)&#13;" line172="        return (SwitchSensor.read() == Switch.Pressed)&#13;" line173="    }&#13;" line174="&#13;" line175="    //% subcategory=&quot;Liftbediening&quot;&#13;" line176="    //% block=&quot;move the lift down&quot;&#13;" line177="    //% block.loc.nl=&quot;beweeg de lift omlaag&quot;&#13;" line178="    export function liftDown() {&#13;" line179="        for (let i = 315; i &gt;= 0; i--) {&#13;" line180="            Nezha.servoAngle(Servo.S1, 360 - i)&#13;" line181="            basic.pause(2)&#13;" line182="        }&#13;" line183="        Nezha.servoAngle(Servo.S2, 350)&#13;" line184="        basic.pause(150)&#13;" line185="        Nezha.servoAngle(Servo.S2, 360)&#13;" line186="    }&#13;" line187="&#13;" line188="    //% subcategory=&quot;Liftbediening&quot;&#13;" line189="    //% block=&quot;move the lift up&quot;&#13;" line190="    //% block.loc.nl=&quot;beweeg de lift omhoog&quot;&#13;" line191="    export function liftUp() {&#13;" line192="        Nezha.servoAngle(Servo.S2, 350)&#13;" line193="        basic.pause(150)&#13;" line194="        Nezha.servoAngle(Servo.S2, 340)&#13;" line195="        for (let j = 0; j &lt;= 315; j++) {&#13;" line196="            Nezha.servoAngle(Servo.S1, 360 - j)&#13;" line197="            basic.pause(2)&#13;" line198="        }&#13;" line199="    }&#13;" line200="&#13;" line201="    //% subcategory=&quot;Routes&quot;&#13;" line202="    //% color=&quot;#FFCC00&quot;&#13;" line203="    //% block=&quot;the route returning from box %box side %side&quot;&#13;" line204="    //% block.loc.nl=&quot;de route terug van vak %box zijde %side&quot;&#13;" line205="    export function goRouteReturn(box: Box, side: Side, programmableCode: () =&gt; void): void {&#13;" line206="        switch (box) {&#13;" line207="            case Box.Green:&#13;" line208="                if (side == Side.A) RouteGreenReturnA = programmableCode;&#13;" line209="                if (side == Side.B) RouteGreenReturnB = programmableCode;&#13;" line210="                break;&#13;" line211="            case Box.Blue:&#13;" line212="                if (side == Side.A) RouteBlueReturnA = programmableCode;&#13;" line213="                if (side == Side.B) RouteBlueReturnB = programmableCode;&#13;" line214="                break;&#13;" line215="            case Box.Yellow:&#13;" line216="                if (side == Side.A) RouteYellowReturnA = programmableCode;&#13;" line217="                if (side == Side.B) RouteYellowReturnB = programmableCode;&#13;" line218="                break;&#13;" line219="        }&#13;" line220="    }&#13;" line221="&#13;" line222="    //% subcategory=&quot;Routes&quot;&#13;" line223="    //% color=&quot;#FFCC00&quot;&#13;" line224="    //% block=&quot;the route to box %box side %side&quot;&#13;" line225="    //% block.loc.nl=&quot;de route naar vak %box zijde %side&quot;&#13;" line226="    export function goRouteBring(box: Box, side: Side, programmableCode: () =&gt; void): void {&#13;" line227="        switch (box) {&#13;" line228="            case Box.Green:&#13;" line229="                if (side == Side.A) RouteGreenBringA = programmableCode;&#13;" line230="                if (side == Side.B) RouteGreenBringB = programmableCode;&#13;" line231="                break;&#13;" line232="            case Box.Blue:&#13;" line233="                if (side == Side.A) RouteBlueBringA = programmableCode;&#13;" line234="                if (side == Side.B) RouteBlueBringB = programmableCode;&#13;" line235="                break;&#13;" line236="            case Box.Yellow:&#13;" line237="                if (side == Side.A) RouteYellowBringA = programmableCode;&#13;" line238="                if (side == Side.B) RouteYellowBringB = programmableCode;&#13;" line239="                break;&#13;" line240="        }&#13;" line241="    }&#13;" line242="&#13;" line243="    //% subcategory=&quot;Routes&quot;&#13;" line244="    //% color=&quot;#FFCC00&quot;&#13;" line245="    //% block=&quot;the route from home to start&quot;&#13;" line246="    //% block.loc.nl=&quot;de route van de thuisbasis naar start&quot;&#13;" line247="    export function goRouteHomeToStart(programmableCode: () =&gt; void): void {&#13;" line248="        RouteHomeToStart = programmableCode;&#13;" line249="    }&#13;" line250="&#13;" line251="    //% subcategory=&quot;Routes&quot;&#13;" line252="    //% color=&quot;#FFCC00&quot;&#13;" line253="    //% block=&quot;the route from start to home&quot;&#13;" line254="    //% block.loc.nl=&quot;de route van start naar de thuisbasis&quot;&#13;" line255="    export function goStartToHome(programmableCode: () =&gt; void): void {&#13;" line256="        RouteStartToHome = programmableCode;&#13;" line257="    }&#13;" line258="}" numlines="259"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="argument_reporter_number" id="%VdHg$ZNxT;0Z0^!qo2{" disabled-reasons="pxt_automatic_disabled" x="924" y="20"><field name="VALUE">dest</field></block><block type="device_forever" id="(@jtOo$*eD{u@:{3[uR;" x="1028" y="20"><statement name="HANDLER"><block type="controls_if" id="B8G#*;f-5(uO2(/(`S5@"><value name="IF0"><shadow type="logic_boolean" id="qF2TlJ=NM=u_}BY[ysX="><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="qPduqdv!cl-vLbC?s-0]"><field name="VAR" id="Z]TS~HE^mcfRK=~A~nuT">ROUTEBUSY</field></block></value><statement name="DO0"><block type="typescript_statement" id="s0q=!Fy-k}m`;*MMT`wQ"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return" numlines="1"></mutation></block></statement><next><block type="controls_if" id="(j^[Tok~w?;O#})zT%;i"><value name="IF0"><shadow type="logic_boolean" id="N/)o-5vv_R5=mfLT(WZc"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="M}T)ZLL7+dMNo8nbEM9^"><field name="OP">OR</field><value name="A"><shadow type="logic_boolean" id="8@[{+ImQU#6=!bhTY,5a"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="|Fc-__2DuC{LX@aw*=ZQ"><value name="BOOL"><shadow type="logic_boolean" id="6r6ovw^~bIdXjk5S?L|l"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="AjId]%MP):T4~t7ep~X;"><field name="VAR" id="d$:`rk][;U_KG!%HC}w!">PALLETBOX</field></block></value></block></value><value name="B"><shadow type="logic_boolean" id="g#=2QjAM3=N4,rt`FQ!r"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="VKpcTb_YTewsY=eaS?fW"><value name="BOOL"><shadow type="logic_boolean" id=":Qz!XNsF8EK?XgM3/jX@"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="a;s40n;0fN#)H2uoGZ4R"><field name="VAR" id="N~kf1#9cH-M`Y)-yHxrG">PALLETSIDE</field></block></value></block></value></block></value><statement name="DO0"><block type="typescript_statement" id="g2A3JWZ^_Nt2-R5PiKoP"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return" numlines="1"></mutation></block></statement><next><block type="controls_if" id="nCIX6,]{k5k*@Ho+iRp9"><value name="IF0"><shadow type="logic_boolean" id="h-{4h~TAOZf5ufH;72t*"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="!B}^@,p!xpL)rxK]qFBE"><field name="VAR" id="L7fXrI#b`xa3Vga[FL~-">StartNextJob</field></block></value><statement name="DO0"><block type="variables_set" id="kTzp8VQAgnbdz_|Q#f]^"><field name="VAR" id="sk,ka[g?^dG}XaZ.VaS{">BOX</field><value name="VALUE"><shadow type="math_number" id="T,c7`oMMXP+YliUPQbcs"><field name="NUM">0</field></shadow><block type="variables_get" id="AP46e3-^0[v@%t=R]kU6"><field name="VAR" id="d$:`rk][;U_KG!%HC}w!">PALLETBOX</field></block></value><next><block type="variables_set" id="?oFMQH5yQ^R+_Hp`C4Tr"><field name="VAR" id="r(4pqc##m/debXmBzg3n">SIDE</field><value name="VALUE"><shadow type="math_number" id=":!I+]GIv.2HHB?C2fWJ3"><field name="NUM">0</field></shadow><block type="variables_get" id="+#3%;vpHfEF]EF95IYDR"><field name="VAR" id="N~kf1#9cH-M`Y)-yHxrG">PALLETSIDE</field></block></value><next><block type="typescript_statement" id="xRhkJX),gc|lyfJ]3:u1"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="StartNextJob()" numlines="1"></mutation></block></next></block></next></block></statement></block></next></block></next></block></statement></block><block type="function_definition" id="^joduId0^{/b8lL91IC_" x="1695" y="20"><mutation name="handle" functionid="5s-untP_c}3v:.RKkY,h"><arg name="dest" id="ewbwdw8pftcauludwalhp" type="number"></arg></mutation><field name="function_name">handle</field><value name="ewbwdw8pftcauludwalhp"><block type="argument_reporter_number" id="u(qnhM)B}L2l~:SjQ:BL" deletable="false"><field name="VALUE">dest</field></block></value><statement name="STACK"><block type="typescript_statement" id="pPN6%6cR0`x73{j^V[/J"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="PALLETBOX = (dest &amp;&amp; 0x0F) &lt;&lt; 4" numlines="1"></mutation><next><block type="variables_set" id="if1x(ZGcHSwfZSE#al37"><field name="VAR" id="N~kf1#9cH-M`Y)-yHxrG">PALLETSIDE</field><value name="VALUE"><shadow type="math_number" id="U.kzC]O]5]D/FOs~?p5y"><field name="NUM">0</field></shadow><block type="logic_operation" id="GsLh/FC.JH%B0kzXkMfb"><field name="OP">AND</field><value name="A"><shadow type="logic_boolean" id="IL~Z:x5?/%ZZ~WcN~)a/"><field name="BOOL">TRUE</field></shadow></value><value name="B"><shadow type="logic_boolean" id="g)dZ}WYstC8(7[aRhOeF"><field name="BOOL">TRUE</field></shadow><block type="typescript_expression" id="c|de[b||DGtOlLtKB|R3"><field name="EXPRESSION">0xF0</field></block></value></block></value></block></next></block></statement></block><block type="function_definition" id="hPL6u.11)1?OD1Gp1Spn" x="2255" y="20"><mutation name="display" functionid="VY^Q(cqpYe7lf?@E_19D"></mutation><field name="function_name">display</field></block></xml>